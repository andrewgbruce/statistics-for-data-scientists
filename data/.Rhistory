# TASK: Plot violin plot to visualize categorical and numerical variables
ggplot(data = airlinestats, aes(airline, pct_carrier_delay)) + ylim(0, 50) + geom_violin() + labs(x = "", y = "Daily % of Delayed Flights")
library(ggplot2)
# TASK: Plot violin plot to visualize categorical and numerical variables
ggplot(data = airlinestats, aes(airline, pct_carrier_delay)) + ylim(0, 50) + geom_violin() + labs(x = "", y = "Daily % of Delayed Flights")
# TASK: Plot violin plot to visualize categorical and numerical variables
ggplot(data = airline_stats, aes(airline, pct_carrier_delay)) + ylim(0, 50) + geom_violin() + labs(x = "", y = "Daily % of Delayed Flights")
# TASK: Plot boxplot to visualize categorical and numerical variables
df <- read.csv("airline_stats.csv", header = TRUE)
setwd("/Users/susheel/Documents/GitHub/statistics-for-data-scientists/data")
# TASK: Plot violin plot to visualize categorical and numerical variables
df <- read.csv("airline_stats.csv", header = TRUE)
ggplot(data = df, aes(airline, pct_carrier_delay)) + ylim(0, 50) + geom_violin() + labs(x = "", y = "Daily % of Delayed Flights")
ggplot(data = df, aes(airline, pct_carrier_delay)) + ylim(0, 50) + geom_violin() + geom_boxplot() + labs(x = "", y = "Daily % of Delayed Flights")
ggplot(data = df, aes(airline, pct_carrier_delay)) + ylim(0, 50) + geom_violin() + labs(x = "", y = "Daily % of Delayed Flights")
# TASK: hexagonal binning to explore relationship between SqftTotLiving and TaxAssessedValue (2 numeric variables)
df <- read.csv("kc_tax.csv", header = TRUE)
kc_tax <- subset(df, TaxAssessedValue < 750000 & SqFtTotLiving > 100 & SqFtTotLiving < 3500)
# TASK: Plot various aspects of tax data for data conditioning
df <- read.csv("kc_tax.csv", header = TRUE)
kc_tax <- subset(df, TaxAssessedValue < 750000 & SqFtTotLiving > 100 & SqFtTotLiving < 3500)
ggplot(subset(kc_tax, ZipCode %in% c(98188, 98105, 98108, 98126)), aes(x = SqFtTotLiving, y = TaxAssessedValue)) + stat_binhex((color = "white") + theme_bw() + scale_fill_gradient(low = "white", high = "blue") + labs(x = "Finished Square Feet", y = "Tax Assessed Value") + facet_wrap("ZipCode"))
ggplot(subset(kc_tax, ZipCode %in% c(98188, 98105, 98108, 98126)), aes(x = SqFtTotLiving, y = TaxAssessedValue)) +
stat_binhex((color = "white") + theme_bw() + scale_fill_gradient(low = "white", high = "blue") + labs(x = "Finished Square Feet", y = "Tax Assessed Value") + facet_wrap("ZipCode"))
ggplot(subset(kc_tax, ZipCode %in% c(98188, 98105, 98108, 98126)), aes(x = SqFtTotLiving, y = TaxAssessedValue)) +
stat_binhex(color = "white") + theme_bw() + scale_fill_gradient(low = "white", high = "blue") + labs(x = "Finished Square Feet", y = "Tax Assessed Value") + facet_wrap("ZipCode"))
ggplot(subset(kc_tax, ZipCode %in% c(98188, 98105, 98108, 98126)), aes(x = SqFtTotLiving, y = TaxAssessedValue)) +
stat_binhex(color = "white") + theme_bw() + scale_fill_gradient(low = "white", high = "blue") + labs(x = "Finished Square Feet", y = "Tax Assessed Value") + facet_wrap("ZipCode")
